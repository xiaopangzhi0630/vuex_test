<template>
  <div class="page">
    <div class="formContainer">
      <el-form ref="queryform" :model="form" label-width="100px">
        <el-form-item label="职位名称">
          <el-select v-model="form.positionName" placeholder="请选择">
            <el-option
              v-for="item in positionOptions"
              :key="item.pos_name"
              :label="item.pos_name"
              :value="item.pos_name"
            ></el-option>
          </el-select>
        </el-form-item>

        <el-form-item label="状态">
          <el-select v-model="form.status" placeholder="请选择">
            <el-option
              v-for="item in statusOptions"
              :key="item.code"
              :label="item.name"
              :value="item.code"
            ></el-option>
          </el-select>
        </el-form-item>
        <ul class="formBtn">
          <el-button type="primary" @click="submit">
            查询
            <i class="el-icon-search el-icon--right"></i>
          </el-button>
          <el-button type="primary" @click="resetForm">
            重置
            <i class="el-icon-refresh-left el-icon--right"></i>
          </el-button>
        </ul>
      </el-form>
    </div>
    <div class="tableToolContainer clearfix">
      <div class="btnGroup-base">
        <el-button type="success" icon="el-icon-plus" circle @click="addItem"></el-button>
        <el-button type="primary" icon="el-icon-edit" circle @click="btnEdit" :disabled="disabled"></el-button>
      </div>
      <div class="btnGroup-other">
        <el-button type="primary" round @click="posStatusUpdata" :disabled="disabled">状态变更</el-button>
      </div>
    </div>
    <div class="tableContainer">
      <el-table
        :data="tableDatas"
        style="width: 100%"
        :border="false"
        :height="fullHeight-300"
        @selection-change="handleSelectionChange"
      >
        <el-table-column type="selection" width="55"></el-table-column>
        <el-table-column fixed type="index" :index="indexMethod" label="序号" width="90"></el-table-column>
        <el-table-column prop="posCode" label="职位编码"></el-table-column>
        <el-table-column prop="posName" label="职位名称"></el-table-column>
        <el-table-column prop="status" label="职位状态"></el-table-column>
        <el-table-column prop="orgCode" label="职位所属机构"></el-table-column>
        <el-table-column prop="posType" label="职位类型"></el-table-column>
      </el-table>
      <el-pagination
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="currentPage"
        :page-sizes="[10, 20, 30, 40]"
        :page-size="100"
        layout="total,sizes, prev, pager, next, jumper"
        :total="total"
      ></el-pagination>
    </div>
    <Dialog></Dialog>
    <UpdateStatus></UpdateStatus>
  </div>
</template>
<script>
import appManagetypes from "../../store/appManage-types.js";
import { mapGetters, mapState, mapActions } from "vuex";
// 添加弹出框
import Dialog from "./dialog/positionManageDialog";
import UpdateStatus from "./dialog/posUpdateStatusDialog";
export default {
  name: "Table1",
  components: {
    Dialog,
    UpdateStatus
  },
  data: function() {
    return {
      form: {
        positionName: "",
        status: ""
      },
      //多选data
      mutiplelines: [],
      formEmpty: false,
      tableDatas: [],
      statusOptions: [{ code: null, name: null }],
      positionOptions: [{ pos_name: null }],
      total: 0,
      //按钮是否可用
      disabled: true
    };
  },
  beforeRouteEnter: (to, from, next) => {
    next(vm => {
      vm.mainContainerEl.setAttribute(
        "class",
        "mainContainer animate__animated animate__fadeInLeft"
      );
    });
  },
  beforeRouteLeave: function(to, from, next) {
    this.mainContainerEl.setAttribute("class", "mainContainer");
    next();
  },
  mounted: function() {
    this.$store.dispatch("getfullHeight");
    this.queryPageList(JSON.stringify({}));
    this.queryStatus();
    this.queryPosName();
  },
  computed: {
    ...mapGetters(["fullHeight", "mainContainerEl"]),
    ...mapGetters("systemManage", ["currentPage", "pageSize"])
  },
  watch: {
    mutiplelines: function(val) {
      if (val && val.length == 1) {
        this.disabled = false;
      } else if (val && val.length > 1) {
        this.disabled = true;
      } else if (val.length == 0) {
        this.disabled = true;
      }
    }
  },
  methods: {
    //职位名称
    queryPosName: function() {
      this.$axios
        .get(process.env.API_HOST + "/posInfo/name")
        .then(res => {
          console.log(res);
          this.positionOptions = res.data.data.name;
        })
        .catch(res => {});
    },
    //查询所有已存在的状态
    queryStatus: function() {
      this.$axios
        .get(process.env.API_HOST + "/posInfo/dropdown")
        .then(res => {
          this.statusOptions = [];
          let resData = res.data.data.status,
            that = this;
          resData.find((val, index, arr) => {
            let cellObj = {};
            cellObj.code = val.code;
            cellObj.name = val.name;
            cellObj.roomAddress = val.roomAddress;
            that.statusOptions.push(cellObj);
          });
        })
        .catch(res => {});
    },
    //序列
    indexMethod(index) {
      return index + 1;
    },
    //size
    handleSizeChange(val) {
      this.$store.commit("systemManage/setPageSize", val);
      this.tableDatas = [];
      let that = this;
      this.queryPageList(JSON.stringify(that.form));
    },
    //page
    handleCurrentChange(val) {
      this.$store.commit("systemManage/setCurrentPage", val);
      this.tableDatas = [];
      let that = this;
      this.queryPageList(JSON.stringify(that.form));
    },
    //多选
    handleSelectionChange: function(val) {
      this.mutiplelines = val;
    },
    //编辑按钮
    btnEdit: function() {
      this.$store.commit("systemManage/setLineData", this.mutiplelines[0]);
      this.$store.commit("systemManage/setDialogFormVisible", true);
      this.$store.commit("systemManage/setTitle", "职位信息更新"); //弹窗标题
      this.$store.commit("systemManage/setDialogStatus", "edit"); //弹窗状态 edit|add
    },
    // 状态变更
    posStatusUpdata: function() {
      this.$store.commit("systemManage/setLineData", this.mutiplelines[0]);
      this.$store.commit("systemManage/setDialogUpdateStatusVisible", true);
    },
    //添加
    addItem() {
      this.$store.commit("systemManage/setDialogFormVisible", true);
      this.$store.commit("systemManage/setTitle", "职位信息新建");
      this.$store.commit("systemManage/setDialogStatus", "add");
    },
    submit: function() {
      let that = this;
      this.tableDatas = [];
      this.queryPageList(JSON.stringify(that.form));
    },
    resetForm() {
      let that = this;
      this.form.positionName = "";
      this.form.status = "";
      this.tableDatas = [];
      this.queryPageList(JSON.stringify(that.form));
    },
    queryPageList: function(appInfo) {
      this.$axios
        .post(
          process.env.API_HOST +
            `/posInfo/selectPageList?pageNum=${this.currentPage}&pageSize=${this.pageSize}`,
          appInfo
        )
        .then(res => {
          let that = this;
          let resData = res.data.data.list;
          if (resData) {
            that.total = res.data.data.total;
            resData.find((value, index, arr) => {
              let cellObj = {};
              cellObj.posCode = value.posCode;
              cellObj.posName = value.posName;
              cellObj.status = value.status;
              that.tableDatas.push(cellObj);
            });
          }
        })
        .catch(err => {});
    },
    refeshLastpage: function() {
      this.$axios
        .post(
          process.env.API_HOST +
            `/posInfo/selectPageList?pageNum=${this.total + 1}&pageSize=${
              this.pageSize
            }`,
          JSON.stringify({})
        )
        .then(res => {
          let that = this;
          let resData = res.data.data.list;
          if (resData) {
            that.total = res.data.data.total;
            this.tableDatas = [];
            resData.find((value, index, arr) => {
              let cellObj = {};
              cellObj.posCode = value.posCode;
              cellObj.posName = value.posName;
              cellObj.status = value.status;
              that.tableDatas.push(cellObj);
            });
          }
        })
        .catch(err => {
          this.$message({
            showClose: false,
            type: "error",
            message: "刷新失败！",
            center: "true",
            offset: this.fullHeight / 2
          });
        });
    }
  }
};
</script>


